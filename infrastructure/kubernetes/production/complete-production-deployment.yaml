---
# UltraMarket Complete Production Deployment
# Professional Kubernetes deployment for all microservices
# Optimized for high availability, scalability, and security

apiVersion: v1
kind: Namespace
metadata:
  name: ultramarket-production
  labels:
    name: ultramarket-production
    environment: production

---
# ConfigMap for environment variables
apiVersion: v1
kind: ConfigMap
metadata:
  name: ultramarket-config
  namespace: ultramarket-production
data:
  NODE_ENV: 'production'
  LOG_LEVEL: 'info'
  REDIS_URL: 'redis://redis-service:6379'
  MONGODB_URL: 'mongodb://mongodb-service:27017/ultramarket'
  POSTGRES_URL: 'postgresql://postgres-service:5432/ultramarket'
  ALLOWED_ORIGINS: 'https://ultramarket.uz,https://admin.ultramarket.uz'
  JWT_EXPIRES_IN: '7d'
  RATE_LIMIT_WINDOW: '900000'
  RATE_LIMIT_MAX: '1000'
  CACHE_TTL: '3600'
  SESSION_SECRET: 'ultra-market-production-secret'
  CORS_ENABLED: 'true'
  HELMET_ENABLED: 'true'
  COMPRESSION_ENABLED: 'true'
  MONITORING_ENABLED: 'true'
  ANALYTICS_ENABLED: 'true'

---
# Secret for sensitive data
apiVersion: v1
kind: Secret
metadata:
  name: ultramarket-secrets
  namespace: ultramarket-production
type: Opaque
stringData:
  JWT_SECRET: 'ultra-market-jwt-secret-key-production'
  POSTGRES_PASSWORD: 'ultra-market-postgres-password'
  MONGODB_PASSWORD: 'ultra-market-mongodb-password'
  REDIS_PASSWORD: 'ultra-market-redis-password'
  ESKIZ_EMAIL: 'info@ultramarket.uz'
  ESKIZ_PASSWORD: 'eskiz-password'
  PLAY_MOBILE_LOGIN: 'ultramarket'
  PLAY_MOBILE_PASSWORD: 'play-mobile-password'
  SENDGRID_API_KEY: 'sendgrid-api-key'
  SMTP_PASSWORD: 'smtp-password'
  CLICK_MERCHANT_ID: 'click-merchant-id'
  CLICK_SECRET_KEY: 'click-secret-key'
  PAYME_MERCHANT_ID: 'payme-merchant-id'
  PAYME_SECRET_KEY: 'payme-secret-key'
  FIREBASE_SERVICE_ACCOUNT: 'firebase-service-account-json'

---
# PostgreSQL Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres-deployment
  namespace: ultramarket-production
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres
          image: postgres:15-alpine
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_DB
              value: 'ultramarket'
            - name: POSTGRES_USER
              value: 'ultramarket'
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: ultramarket-secrets
                  key: POSTGRES_PASSWORD
          volumeMounts:
            - name: postgres-storage
              mountPath: /var/lib/postgresql/data
          resources:
            requests:
              memory: '512Mi'
              cpu: '250m'
            limits:
              memory: '1Gi'
              cpu: '500m'
      volumes:
        - name: postgres-storage
          persistentVolumeClaim:
            claimName: postgres-pvc

---
# PostgreSQL Service
apiVersion: v1
kind: Service
metadata:
  name: postgres-service
  namespace: ultramarket-production
spec:
  selector:
    app: postgres
  ports:
    - port: 5432
      targetPort: 5432
  type: ClusterIP

---
# PostgreSQL PVC
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-pvc
  namespace: ultramarket-production
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 20Gi
  storageClassName: fast-ssd

---
# MongoDB Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongodb-deployment
  namespace: ultramarket-production
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongodb
  template:
    metadata:
      labels:
        app: mongodb
    spec:
      containers:
        - name: mongodb
          image: mongo:7
          ports:
            - containerPort: 27017
          env:
            - name: MONGO_INITDB_ROOT_USERNAME
              value: 'ultramarket'
            - name: MONGO_INITDB_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: ultramarket-secrets
                  key: MONGODB_PASSWORD
          volumeMounts:
            - name: mongodb-storage
              mountPath: /data/db
          resources:
            requests:
              memory: '512Mi'
              cpu: '250m'
            limits:
              memory: '1Gi'
              cpu: '500m'
      volumes:
        - name: mongodb-storage
          persistentVolumeClaim:
            claimName: mongodb-pvc

---
# MongoDB Service
apiVersion: v1
kind: Service
metadata:
  name: mongodb-service
  namespace: ultramarket-production
spec:
  selector:
    app: mongodb
  ports:
    - port: 27017
      targetPort: 27017
  type: ClusterIP

---
# MongoDB PVC
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mongodb-pvc
  namespace: ultramarket-production
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 20Gi
  storageClassName: fast-ssd

---
# Redis Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis-deployment
  namespace: ultramarket-production
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
        - name: redis
          image: redis:7-alpine
          ports:
            - containerPort: 6379
          command:
            - redis-server
            - --requirepass
            - $(REDIS_PASSWORD)
          env:
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: ultramarket-secrets
                  key: REDIS_PASSWORD
          resources:
            requests:
              memory: '256Mi'
              cpu: '100m'
            limits:
              memory: '512Mi'
              cpu: '250m'

---
# Redis Service
apiVersion: v1
kind: Service
metadata:
  name: redis-service
  namespace: ultramarket-production
spec:
  selector:
    app: redis
  ports:
    - port: 6379
      targetPort: 6379
  type: ClusterIP

---
# API Gateway Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-gateway-deployment
  namespace: ultramarket-production
spec:
  replicas: 3
  selector:
    matchLabels:
      app: api-gateway
  template:
    metadata:
      labels:
        app: api-gateway
    spec:
      containers:
        - name: api-gateway
          image: ultramarket/api-gateway:latest
          ports:
            - containerPort: 3000
          envFrom:
            - configMapRef:
                name: ultramarket-config
            - secretRef:
                name: ultramarket-secrets
          resources:
            requests:
              memory: '256Mi'
              cpu: '200m'
            limits:
              memory: '512Mi'
              cpu: '500m'
          livenessProbe:
            httpGet:
              path: /health
              port: 3000
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /health
              port: 3000
            initialDelaySeconds: 5
            periodSeconds: 5

---
# API Gateway Service
apiVersion: v1
kind: Service
metadata:
  name: api-gateway-service
  namespace: ultramarket-production
spec:
  selector:
    app: api-gateway
  ports:
    - port: 3000
      targetPort: 3000
  type: ClusterIP

---
# User Service Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: user-service-deployment
  namespace: ultramarket-production
spec:
  replicas: 2
  selector:
    matchLabels:
      app: user-service
  template:
    metadata:
      labels:
        app: user-service
    spec:
      containers:
        - name: user-service
          image: ultramarket/user-service:latest
          ports:
            - containerPort: 3001
          envFrom:
            - configMapRef:
                name: ultramarket-config
            - secretRef:
                name: ultramarket-secrets
          resources:
            requests:
              memory: '256Mi'
              cpu: '200m'
            limits:
              memory: '512Mi'
              cpu: '500m'
          livenessProbe:
            httpGet:
              path: /health
              port: 3001
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /health
              port: 3001
            initialDelaySeconds: 5
            periodSeconds: 5

---
# User Service Service
apiVersion: v1
kind: Service
metadata:
  name: user-service-service
  namespace: ultramarket-production
spec:
  selector:
    app: user-service
  ports:
    - port: 3001
      targetPort: 3001
  type: ClusterIP

---
# Product Service Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: product-service-deployment
  namespace: ultramarket-production
spec:
  replicas: 3
  selector:
    matchLabels:
      app: product-service
  template:
    metadata:
      labels:
        app: product-service
    spec:
      containers:
        - name: product-service
          image: ultramarket/product-service:latest
          ports:
            - containerPort: 3002
          envFrom:
            - configMapRef:
                name: ultramarket-config
            - secretRef:
                name: ultramarket-secrets
          resources:
            requests:
              memory: '512Mi'
              cpu: '300m'
            limits:
              memory: '1Gi'
              cpu: '600m'
          livenessProbe:
            httpGet:
              path: /health
              port: 3002
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /health
              port: 3002
            initialDelaySeconds: 5
            periodSeconds: 5

---
# Product Service Service
apiVersion: v1
kind: Service
metadata:
  name: product-service-service
  namespace: ultramarket-production
spec:
  selector:
    app: product-service
  ports:
    - port: 3002
      targetPort: 3002
  type: ClusterIP

---
# Order Service Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: order-service-deployment
  namespace: ultramarket-production
spec:
  replicas: 2
  selector:
    matchLabels:
      app: order-service
  template:
    metadata:
      labels:
        app: order-service
    spec:
      containers:
        - name: order-service
          image: ultramarket/order-service:latest
          ports:
            - containerPort: 3003
          envFrom:
            - configMapRef:
                name: ultramarket-config
            - secretRef:
                name: ultramarket-secrets
          resources:
            requests:
              memory: '512Mi'
              cpu: '300m'
            limits:
              memory: '1Gi'
              cpu: '600m'
          livenessProbe:
            httpGet:
              path: /health
              port: 3003
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /health
              port: 3003
            initialDelaySeconds: 5
            periodSeconds: 5

---
# Order Service Service
apiVersion: v1
kind: Service
metadata:
  name: order-service-service
  namespace: ultramarket-production
spec:
  selector:
    app: order-service
  ports:
    - port: 3003
      targetPort: 3003
  type: ClusterIP

---
# Cart Service Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cart-service-deployment
  namespace: ultramarket-production
spec:
  replicas: 2
  selector:
    matchLabels:
      app: cart-service
  template:
    metadata:
      labels:
        app: cart-service
    spec:
      containers:
        - name: cart-service
          image: ultramarket/cart-service:latest
          ports:
            - containerPort: 3004
          envFrom:
            - configMapRef:
                name: ultramarket-config
            - secretRef:
                name: ultramarket-secrets
          resources:
            requests:
              memory: '256Mi'
              cpu: '200m'
            limits:
              memory: '512Mi'
              cpu: '400m'
          livenessProbe:
            httpGet:
              path: /health
              port: 3004
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /health
              port: 3004
            initialDelaySeconds: 5
            periodSeconds: 5

---
# Cart Service Service
apiVersion: v1
kind: Service
metadata:
  name: cart-service-service
  namespace: ultramarket-production
spec:
  selector:
    app: cart-service
  ports:
    - port: 3004
      targetPort: 3004
  type: ClusterIP

---
# Payment Service Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: payment-service-deployment
  namespace: ultramarket-production
spec:
  replicas: 2
  selector:
    matchLabels:
      app: payment-service
  template:
    metadata:
      labels:
        app: payment-service
    spec:
      containers:
        - name: payment-service
          image: ultramarket/payment-service:latest
          ports:
            - containerPort: 3005
          envFrom:
            - configMapRef:
                name: ultramarket-config
            - secretRef:
                name: ultramarket-secrets
          resources:
            requests:
              memory: '256Mi'
              cpu: '200m'
            limits:
              memory: '512Mi'
              cpu: '400m'
          livenessProbe:
            httpGet:
              path: /health
              port: 3005
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /health
              port: 3005
            initialDelaySeconds: 5
            periodSeconds: 5

---
# Payment Service Service
apiVersion: v1
kind: Service
metadata:
  name: payment-service-service
  namespace: ultramarket-production
spec:
  selector:
    app: payment-service
  ports:
    - port: 3005
      targetPort: 3005
  type: ClusterIP

---
# Review Service Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: review-service-deployment
  namespace: ultramarket-production
spec:
  replicas: 2
  selector:
    matchLabels:
      app: review-service
  template:
    metadata:
      labels:
        app: review-service
    spec:
      containers:
        - name: review-service
          image: ultramarket/review-service:latest
          ports:
            - containerPort: 3006
          envFrom:
            - configMapRef:
                name: ultramarket-config
            - secretRef:
                name: ultramarket-secrets
          resources:
            requests:
              memory: '256Mi'
              cpu: '200m'
            limits:
              memory: '512Mi'
              cpu: '400m'
          livenessProbe:
            httpGet:
              path: /health
              port: 3006
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /health
              port: 3006
            initialDelaySeconds: 5
            periodSeconds: 5

---
# Review Service Service
apiVersion: v1
kind: Service
metadata:
  name: review-service-service
  namespace: ultramarket-production
spec:
  selector:
    app: review-service
  ports:
    - port: 3006
      targetPort: 3006
  type: ClusterIP

---
# Notification Service Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: notification-service-deployment
  namespace: ultramarket-production
spec:
  replicas: 2
  selector:
    matchLabels:
      app: notification-service
  template:
    metadata:
      labels:
        app: notification-service
    spec:
      containers:
        - name: notification-service
          image: ultramarket/notification-service:latest
          ports:
            - containerPort: 3007
          envFrom:
            - configMapRef:
                name: ultramarket-config
            - secretRef:
                name: ultramarket-secrets
          resources:
            requests:
              memory: '256Mi'
              cpu: '200m'
            limits:
              memory: '512Mi'
              cpu: '400m'
          livenessProbe:
            httpGet:
              path: /health
              port: 3007
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /health
              port: 3007
            initialDelaySeconds: 5
            periodSeconds: 5

---
# Notification Service Service
apiVersion: v1
kind: Service
metadata:
  name: notification-service-service
  namespace: ultramarket-production
spec:
  selector:
    app: notification-service
  ports:
    - port: 3007
      targetPort: 3007
  type: ClusterIP

---
# Inventory Service Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: inventory-service-deployment
  namespace: ultramarket-production
spec:
  replicas: 2
  selector:
    matchLabels:
      app: inventory-service
  template:
    metadata:
      labels:
        app: inventory-service
    spec:
      containers:
        - name: inventory-service
          image: ultramarket/inventory-service:latest
          ports:
            - containerPort: 3008
          envFrom:
            - configMapRef:
                name: ultramarket-config
            - secretRef:
                name: ultramarket-secrets
          resources:
            requests:
              memory: '256Mi'
              cpu: '200m'
            limits:
              memory: '512Mi'
              cpu: '400m'
          livenessProbe:
            httpGet:
              path: /health
              port: 3008
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /health
              port: 3008
            initialDelaySeconds: 5
            periodSeconds: 5

---
# Inventory Service Service
apiVersion: v1
kind: Service
metadata:
  name: inventory-service-service
  namespace: ultramarket-production
spec:
  selector:
    app: inventory-service
  ports:
    - port: 3008
      targetPort: 3008
  type: ClusterIP

---
# Analytics Service Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: analytics-service-deployment
  namespace: ultramarket-production
spec:
  replicas: 2
  selector:
    matchLabels:
      app: analytics-service
  template:
    metadata:
      labels:
        app: analytics-service
    spec:
      containers:
        - name: analytics-service
          image: ultramarket/analytics-service:latest
          ports:
            - containerPort: 3009
          envFrom:
            - configMapRef:
                name: ultramarket-config
            - secretRef:
                name: ultramarket-secrets
          resources:
            requests:
              memory: '512Mi'
              cpu: '300m'
            limits:
              memory: '1Gi'
              cpu: '600m'
          livenessProbe:
            httpGet:
              path: /health
              port: 3009
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /health
              port: 3009
            initialDelaySeconds: 5
            periodSeconds: 5

---
# Analytics Service Service
apiVersion: v1
kind: Service
metadata:
  name: analytics-service-service
  namespace: ultramarket-production
spec:
  selector:
    app: analytics-service
  ports:
    - port: 3009
      targetPort: 3009
  type: ClusterIP

---
# Web App Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: web-app-deployment
  namespace: ultramarket-production
spec:
  replicas: 3
  selector:
    matchLabels:
      app: web-app
  template:
    metadata:
      labels:
        app: web-app
    spec:
      containers:
        - name: web-app
          image: ultramarket/web-app:latest
          ports:
            - containerPort: 80
          env:
            - name: REACT_APP_API_URL
              value: 'https://api.ultramarket.uz'
            - name: REACT_APP_ENVIRONMENT
              value: 'production'
          resources:
            requests:
              memory: '128Mi'
              cpu: '100m'
            limits:
              memory: '256Mi'
              cpu: '200m'
          livenessProbe:
            httpGet:
              path: /
              port: 80
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /
              port: 80
            initialDelaySeconds: 5
            periodSeconds: 5

---
# Web App Service
apiVersion: v1
kind: Service
metadata:
  name: web-app-service
  namespace: ultramarket-production
spec:
  selector:
    app: web-app
  ports:
    - port: 80
      targetPort: 80
  type: ClusterIP

---
# Admin Panel Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: admin-panel-deployment
  namespace: ultramarket-production
spec:
  replicas: 2
  selector:
    matchLabels:
      app: admin-panel
  template:
    metadata:
      labels:
        app: admin-panel
    spec:
      containers:
        - name: admin-panel
          image: ultramarket/admin-panel:latest
          ports:
            - containerPort: 80
          env:
            - name: REACT_APP_API_URL
              value: 'https://api.ultramarket.uz'
            - name: REACT_APP_ENVIRONMENT
              value: 'production'
          resources:
            requests:
              memory: '128Mi'
              cpu: '100m'
            limits:
              memory: '256Mi'
              cpu: '200m'
          livenessProbe:
            httpGet:
              path: /
              port: 80
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /
              port: 80
            initialDelaySeconds: 5
            periodSeconds: 5

---
# Admin Panel Service
apiVersion: v1
kind: Service
metadata:
  name: admin-panel-service
  namespace: ultramarket-production
spec:
  selector:
    app: admin-panel
  ports:
    - port: 80
      targetPort: 80
  type: ClusterIP

---
# Ingress Controller
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ultramarket-ingress
  namespace: ultramarket-production
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: letsencrypt-prod
    nginx.ingress.kubernetes.io/ssl-redirect: 'true'
    nginx.ingress.kubernetes.io/force-ssl-redirect: 'true'
    nginx.ingress.kubernetes.io/proxy-body-size: '10m'
    nginx.ingress.kubernetes.io/rate-limit: '100'
    nginx.ingress.kubernetes.io/rate-limit-window: '1m'
spec:
  tls:
    - hosts:
        - ultramarket.uz
        - api.ultramarket.uz
        - admin.ultramarket.uz
      secretName: ultramarket-tls
  rules:
    - host: ultramarket.uz
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: web-app-service
                port:
                  number: 80
    - host: api.ultramarket.uz
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: api-gateway-service
                port:
                  number: 3000
    - host: admin.ultramarket.uz
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: admin-panel-service
                port:
                  number: 80

---
# Horizontal Pod Autoscaler for API Gateway
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: api-gateway-hpa
  namespace: ultramarket-production
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: api-gateway-deployment
  minReplicas: 3
  maxReplicas: 10
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 70
    - type: Resource
      resource:
        name: memory
        target:
          type: Utilization
          averageUtilization: 80

---
# Horizontal Pod Autoscaler for Product Service
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: product-service-hpa
  namespace: ultramarket-production
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: product-service-deployment
  minReplicas: 3
  maxReplicas: 15
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 70
    - type: Resource
      resource:
        name: memory
        target:
          type: Utilization
          averageUtilization: 80

---
# Network Policy for Security
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: ultramarket-network-policy
  namespace: ultramarket-production
spec:
  podSelector: {}
  policyTypes:
    - Ingress
    - Egress
  ingress:
    - from:
        - namespaceSelector:
            matchLabels:
              name: ultramarket-production
        - namespaceSelector:
            matchLabels:
              name: ingress-nginx
  egress:
    - to:
        - namespaceSelector:
            matchLabels:
              name: ultramarket-production
    - to: []
      ports:
        - protocol: TCP
          port: 53
        - protocol: UDP
          port: 53
        - protocol: TCP
          port: 443
        - protocol: TCP
          port: 80

---
# Pod Disruption Budget for API Gateway
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: api-gateway-pdb
  namespace: ultramarket-production
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app: api-gateway

---
# Pod Disruption Budget for Product Service
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: product-service-pdb
  namespace: ultramarket-production
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app: product-service

---
# Service Monitor for Prometheus
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: ultramarket-service-monitor
  namespace: ultramarket-production
spec:
  selector:
    matchLabels:
      monitoring: enabled
  endpoints:
    - port: http
      path: /metrics
      interval: 30s

---
# Prometheus Rule for Alerts
apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  name: ultramarket-alerts
  namespace: ultramarket-production
spec:
  groups:
    - name: ultramarket.rules
      rules:
        - alert: HighCPUUsage
          expr: (100 - (avg by (instance) (irate(node_cpu_seconds_total{mode="idle"}[5m])) * 100)) > 80
          for: 5m
          labels:
            severity: warning
          annotations:
            summary: 'High CPU usage detected'
            description: 'CPU usage is above 80% for more than 5 minutes'

        - alert: HighMemoryUsage
          expr: (1 - (node_memory_MemAvailable_bytes / node_memory_MemTotal_bytes)) * 100 > 85
          for: 5m
          labels:
            severity: warning
          annotations:
            summary: 'High memory usage detected'
            description: 'Memory usage is above 85% for more than 5 minutes'

        - alert: ServiceDown
          expr: up{job="ultramarket-services"} == 0
          for: 1m
          labels:
            severity: critical
          annotations:
            summary: 'Service is down'
            description: '{{ $labels.instance }} has been down for more than 1 minute'

        - alert: HighResponseTime
          expr: histogram_quantile(0.95, sum(rate(http_request_duration_seconds_bucket[5m])) by (le, service)) > 2
          for: 5m
          labels:
            severity: warning
          annotations:
            summary: 'High response time'
            description: '95th percentile response time is above 2 seconds'
