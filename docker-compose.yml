version: '3.8'

services:
  # Databases
  postgres:
    image: postgres:15-alpine
    container_name: newegg_postgres
    environment:
      POSTGRES_DB: newegg_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - newegg_network

  mongodb:
    image: mongo:6.0
    container_name: newegg_mongodb
    environment:
      MONGO_INITDB_ROOT_USERNAME: mongo
      MONGO_INITDB_ROOT_PASSWORD: mongo123
      MONGO_INITDB_DATABASE: newegg_products
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    networks:
      - newegg_network

  redis:
    image: redis:7-alpine
    container_name: newegg_redis
    command: redis-server --requirepass redis123
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - newegg_network

  # Message Broker
  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: newegg_kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - newegg_network

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: newegg_zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - newegg_network

  # Elasticsearch
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.0
    container_name: newegg_elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ports:
      - "9200:9200"
    volumes:
      - elastic_data:/usr/share/elasticsearch/data
    networks:
      - newegg_network

  # Monitoring
  prometheus:
    image: prom/prometheus:latest
    container_name: newegg_prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - "9090:9090"
    volumes:
      - ./infrastructure/monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    networks:
      - newegg_network

  grafana:
    image: grafana/grafana:latest
    container_name: newegg_grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin123
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - newegg_network

  # API Gateway
  kong:
    image: kong:3.5-alpine
    container_name: newegg_kong
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: postgres
      KONG_PG_USER: postgres
      KONG_PG_PASSWORD: postgres123
      KONG_ADMIN_LISTEN: 0.0.0.0:8001
      KONG_PROXY_LISTEN: 0.0.0.0:8000
    ports:
      - "8000:8000"
      - "8001:8001"
    depends_on:
      - postgres
    networks:
      - newegg_network

  # MinIO (S3 alternative)
  minio:
    image: minio/minio:latest
    container_name: newegg_minio
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    networks:
      - newegg_network

volumes:
  postgres_data:
  mongo_data:
  redis_data:
  elastic_data:
  prometheus_data:
  grafana_data:
  minio_data:

networks:
  newegg_network:
    driver: bridge 