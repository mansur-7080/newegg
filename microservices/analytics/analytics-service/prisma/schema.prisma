// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Core models for analytics calculations
model Order {
  id              String   @id @default(cuid())
  orderNumber     String   @unique
  userId          String
  storeId         String
  status          String   @default("pending")
  total           Decimal  @db.Decimal(10, 2)
  subtotal        Decimal  @db.Decimal(10, 2)
  tax             Decimal  @db.Decimal(10, 2) @default(0)
  shipping        Decimal  @db.Decimal(10, 2) @default(0)
  discount        Decimal  @db.Decimal(10, 2) @default(0)
  paymentMethod   String
  paymentStatus   String   @default("pending")
  shippingAddress Json
  region          String?
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt

  // Relations
  items OrderItem[]

  @@map("orders")
}

model OrderItem {
  id        String  @id @default(cuid())
  orderId   String
  productId String
  quantity  Int
  price     Decimal @db.Decimal(10, 2)
  total     Decimal @db.Decimal(10, 2)

  // Relations
  order   Order   @relation(fields: [orderId], references: [id])
  product Product @relation(fields: [productId], references: [id])

  @@map("order_items")
}

model Product {
  id          String   @id @default(cuid())
  name        String
  description String
  sku         String   @unique
  price       Decimal  @db.Decimal(10, 2)
  salePrice   Decimal? @db.Decimal(10, 2)
  stock       Int      @default(0)
  category    String
  subcategory String?
  brand       String?
  isActive    Boolean  @default(true)
  isFeatured  Boolean  @default(false)
  storeId     String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relations
  orderItems OrderItem[]
  reviews    Review[]

  @@map("products")
}

model Review {
  id        String   @id @default(cuid())
  userId    String
  productId String
  storeId   String
  rating    Int      // 1-5
  title     String?
  comment   String?
  isVerified Boolean @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  product Product @relation(fields: [productId], references: [id])

  @@unique([userId, productId])
  @@map("reviews")
}

// Analytics-specific models
model AnalyticsEvent {
  id         String   @id @default(cuid())
  eventType  String   // page_view, product_view, add_to_cart, purchase, etc.
  userId     String?
  sessionId  String
  productId  String?
  storeId    String?
  category   String?
  value      Decimal? @db.Decimal(10, 2)
  metadata   Json?
  userAgent  String?
  ipAddress  String?
  region     String?
  createdAt  DateTime @default(now())

  @@index([eventType, createdAt])
  @@index([userId, createdAt])
  @@index([storeId, createdAt])
  @@map("analytics_events")
}

model UserSession {
  id           String   @id @default(cuid())
  sessionId    String   @unique
  userId       String?
  startTime    DateTime @default(now())
  endTime      DateTime?
  duration     Int?     // in seconds
  pageViews    Int      @default(0)
  bounceRate   Boolean  @default(false)
  deviceType   String?  // mobile, desktop, tablet
  browser      String?
  os           String?
  country      String?
  region       String?
  city         String?
  referrer     String?
  utmSource    String?
  utmMedium    String?
  utmCampaign  String?

  @@index([userId, startTime])
  @@index([region, startTime])
  @@map("user_sessions")
}

model DailyMetrics {
  id              String   @id @default(cuid())
  date            DateTime @unique @db.Date
  totalOrders     Int      @default(0)
  totalRevenue    Decimal  @db.Decimal(12, 2) @default(0)
  totalUsers      Int      @default(0)
  newUsers        Int      @default(0)
  activeUsers     Int      @default(0)
  pageViews       Int      @default(0)
  sessions        Int      @default(0)
  bounceRate      Float    @default(0)
  conversionRate  Float    @default(0)
  avgOrderValue   Decimal  @db.Decimal(10, 2) @default(0)
  avgSessionTime  Int      @default(0)
  topCategory     String?
  topRegion       String?
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt

  @@map("daily_metrics")
}

model StoreMetrics {
  id              String   @id @default(cuid())
  storeId         String
  date            DateTime @db.Date
  orders          Int      @default(0)
  revenue         Decimal  @db.Decimal(12, 2) @default(0)
  visitors        Int      @default(0)
  conversionRate  Float    @default(0)
  avgOrderValue   Decimal  @db.Decimal(10, 2) @default(0)
  topProduct      String?
  rating          Float    @default(0)
  reviews         Int      @default(0)
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt

  @@unique([storeId, date])
  @@index([storeId, date])
  @@map("store_metrics")
}

model RegionalMetrics {
  id             String   @id @default(cuid())
  region         String
  date           DateTime @db.Date
  orders         Int      @default(0)
  revenue        Decimal  @db.Decimal(12, 2) @default(0)
  users          Int      @default(0)
  sessions       Int      @default(0)
  topCategory    String?
  topStore       String?
  growthRate     Float    @default(0)
  marketShare    Float    @default(0)
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  @@unique([region, date])
  @@index([region, date])
  @@map("regional_metrics")
}