apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
  namespace: ultramarket
  labels:
    app: prometheus
    component: server
data:
  prometheus.yml: |
    global:
      scrape_interval: 15s
      evaluation_interval: 15s
      external_labels:
        cluster: 'ultramarket-production'
        environment: 'production'

    rule_files:
      - "/etc/prometheus/rules/*.yml"

    alerting:
      alertmanagers:
        - static_configs:
            - targets:
              - alertmanager:9093

    scrape_configs:
      # Prometheus itself
      - job_name: 'prometheus'
        static_configs:
          - targets: ['localhost:9090']

      # Kubernetes API Server
      - job_name: 'kubernetes-apiservers'
        kubernetes_sd_configs:
          - role: endpoints
        scheme: https
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        relabel_configs:
          - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
            action: keep
            regex: default;kubernetes;https

      # Kubernetes Nodes
      - job_name: 'kubernetes-nodes'
        kubernetes_sd_configs:
          - role: node
        scheme: https
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        relabel_configs:
          - action: labelmap
            regex: __meta_kubernetes_node_label_(.+)
          - target_label: __address__
            replacement: kubernetes.default.svc:443
          - source_labels: [__meta_kubernetes_node_name]
            regex: (.+)
            target_label: __metrics_path__
            replacement: /api/v1/nodes/${1}/proxy/metrics

      # Kubernetes Pods
      - job_name: 'kubernetes-pods'
        kubernetes_sd_configs:
          - role: pod
        relabel_configs:
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
            action: keep
            regex: true
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
            action: replace
            target_label: __metrics_path__
            regex: (.+)
          - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
            action: replace
            regex: ([^:]+)(?::\d+)?;(\d+)
            replacement: $1:$2
            target_label: __address__
          - action: labelmap
            regex: __meta_kubernetes_pod_label_(.+)
          - source_labels: [__meta_kubernetes_namespace]
            action: replace
            target_label: kubernetes_namespace
          - source_labels: [__meta_kubernetes_pod_name]
            action: replace
            target_label: kubernetes_pod_name

      # UltraMarket Services
      - job_name: 'ultramarket-api-gateway'
        kubernetes_sd_configs:
          - role: endpoints
            namespaces:
              names:
                - ultramarket
        relabel_configs:
          - source_labels: [__meta_kubernetes_service_name]
            action: keep
            regex: api-gateway
          - source_labels: [__meta_kubernetes_endpoint_port_name]
            action: keep
            regex: metrics

      - job_name: 'ultramarket-auth-service'
        kubernetes_sd_configs:
          - role: endpoints
            namespaces:
              names:
                - ultramarket
        relabel_configs:
          - source_labels: [__meta_kubernetes_service_name]
            action: keep
            regex: auth-service
          - source_labels: [__meta_kubernetes_endpoint_port_name]
            action: keep
            regex: metrics

      - job_name: 'ultramarket-user-service'
        kubernetes_sd_configs:
          - role: endpoints
            namespaces:
              names:
                - ultramarket
        relabel_configs:
          - source_labels: [__meta_kubernetes_service_name]
            action: keep
            regex: user-service
          - source_labels: [__meta_kubernetes_endpoint_port_name]
            action: keep
            regex: metrics

      - job_name: 'ultramarket-product-service'
        kubernetes_sd_configs:
          - role: endpoints
            namespaces:
              names:
                - ultramarket
        relabel_configs:
          - source_labels: [__meta_kubernetes_service_name]
            action: keep
            regex: product-service
          - source_labels: [__meta_kubernetes_endpoint_port_name]
            action: keep
            regex: metrics

      - job_name: 'ultramarket-cart-service'
        kubernetes_sd_configs:
          - role: endpoints
            namespaces:
              names:
                - ultramarket
        relabel_configs:
          - source_labels: [__meta_kubernetes_service_name]
            action: keep
            regex: cart-service
          - source_labels: [__meta_kubernetes_endpoint_port_name]
            action: keep
            regex: metrics

      - job_name: 'ultramarket-order-service'
        kubernetes_sd_configs:
          - role: endpoints
            namespaces:
              names:
                - ultramarket
        relabel_configs:
          - source_labels: [__meta_kubernetes_service_name]
            action: keep
            regex: order-service
          - source_labels: [__meta_kubernetes_endpoint_port_name]
            action: keep
            regex: metrics

      - job_name: 'ultramarket-payment-service'
        kubernetes_sd_configs:
          - role: endpoints
            namespaces:
              names:
                - ultramarket
        relabel_configs:
          - source_labels: [__meta_kubernetes_service_name]
            action: keep
            regex: payment-service
          - source_labels: [__meta_kubernetes_endpoint_port_name]
            action: keep
            regex: metrics

      # Database Exporters
      - job_name: 'postgres-exporter'
        static_configs:
          - targets: ['postgres-exporter:9187']
        scrape_interval: 30s

      - job_name: 'mongodb-exporter'
        static_configs:
          - targets: ['mongodb-exporter:9216']
        scrape_interval: 30s

      - job_name: 'redis-exporter'
        static_configs:
          - targets: ['redis-exporter:9121']
        scrape_interval: 30s

      - job_name: 'elasticsearch-exporter'
        static_configs:
          - targets: ['elasticsearch-exporter:9114']
        scrape_interval: 30s

      # Infrastructure Exporters
      - job_name: 'node-exporter'
        kubernetes_sd_configs:
          - role: endpoints
        relabel_configs:
          - source_labels: [__meta_kubernetes_endpoints_name]
            regex: 'node-exporter'
            action: keep

      - job_name: 'kube-state-metrics'
        static_configs:
          - targets: ['kube-state-metrics:8080']

      - job_name: 'cadvisor'
        kubernetes_sd_configs:
          - role: node
        scheme: https
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        relabel_configs:
          - action: labelmap
            regex: __meta_kubernetes_node_label_(.+)
          - target_label: __address__
            replacement: kubernetes.default.svc:443
          - source_labels: [__meta_kubernetes_node_name]
            regex: (.+)
            target_label: __metrics_path__
            replacement: /api/v1/nodes/${1}/proxy/metrics/cadvisor

      # External Services
      - job_name: 'nginx-ingress'
        kubernetes_sd_configs:
          - role: pod
            namespaces:
              names:
                - ingress-nginx
        relabel_configs:
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
            action: keep
            regex: true
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scheme]
            action: replace
            target_label: __scheme__
            regex: (https?)
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
            action: replace
            target_label: __metrics_path__
            regex: (.+)
          - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
            action: replace
            regex: ([^:]+)(?::\d+)?;(\d+)
            replacement: $1:$2
            target_label: __address__

      # Blackbox Exporter for External Monitoring
      - job_name: 'blackbox-http'
        metrics_path: /probe
        params:
          module: [http_2xx]
        static_configs:
          - targets:
            - https://ultramarket.uz
            - https://api.ultramarket.uz/health
            - https://admin.ultramarket.uz
        relabel_configs:
          - source_labels: [__address__]
            target_label: __param_target
          - source_labels: [__param_target]
            target_label: instance
          - target_label: __address__
            replacement: blackbox-exporter:9115

      # Custom Business Metrics
      - job_name: 'ultramarket-business-metrics'
        kubernetes_sd_configs:
          - role: endpoints
            namespaces:
              names:
                - ultramarket
        relabel_configs:
          - source_labels: [__meta_kubernetes_service_name]
            action: keep
            regex: business-metrics
          - source_labels: [__meta_kubernetes_endpoint_port_name]
            action: keep
            regex: metrics
        scrape_interval: 60s

  alerts.yml: |
    groups:
    - name: ultramarket.rules
      rules:
      # High-level service availability
      - alert: ServiceDown
        expr: up{job=~"ultramarket-.*"} == 0
        for: 1m
        labels:
          severity: critical
        annotations:
          summary: "UltraMarket service {{ $labels.job }} is down"
          description: "{{ $labels.job }} has been down for more than 1 minute."

      # API Gateway specific alerts
      - alert: HighErrorRate
        expr: |
          (
            rate(http_requests_total{job="ultramarket-api-gateway",code=~"5.."}[5m])
            /
            rate(http_requests_total{job="ultramarket-api-gateway"}[5m])
          ) > 0.05
        for: 2m
        labels:
          severity: critical
        annotations:
          summary: "High error rate on API Gateway"
          description: "Error rate is {{ $value | humanizePercentage }}"

      - alert: HighLatency
        expr: |
          histogram_quantile(0.95, 
            rate(http_request_duration_seconds_bucket{job="ultramarket-api-gateway"}[5m])
          ) > 0.5
        for: 5m
        labels:
          severity: warning
        annotations:
          summary: "High latency on API Gateway"
          description: "95th percentile latency is {{ $value }}s"

      # Database alerts
      - alert: PostgreSQLDown
        expr: up{job="postgres-exporter"} == 0
        for: 1m
        labels:
          severity: critical
        annotations:
          summary: "PostgreSQL is down"
          description: "PostgreSQL database is not responding"

      - alert: HighDatabaseConnections
        expr: |
          (
            pg_stat_database_numbackends / pg_settings_max_connections
          ) > 0.8
        for: 5m
        labels:
          severity: warning
        annotations:
          summary: "High database connection usage"
          description: "Database connection usage is {{ $value | humanizePercentage }}"

      - alert: RedisDown
        expr: up{job="redis-exporter"} == 0
        for: 1m
        labels:
          severity: critical
        annotations:
          summary: "Redis is down"
          description: "Redis cache is not responding"

      # Resource usage alerts
      - alert: HighCPUUsage
        expr: |
          (
            rate(container_cpu_usage_seconds_total{namespace="ultramarket"}[5m])
            /
            container_spec_cpu_quota{namespace="ultramarket"} * container_spec_cpu_period{namespace="ultramarket"}
          ) > 0.8
        for: 5m
        labels:
          severity: warning
        annotations:
          summary: "High CPU usage"
          description: "CPU usage is {{ $value | humanizePercentage }}"

      - alert: HighMemoryUsage
        expr: |
          (
            container_memory_usage_bytes{namespace="ultramarket"}
            /
            container_spec_memory_limit_bytes{namespace="ultramarket"}
          ) > 0.9
        for: 5m
        labels:
          severity: critical
        annotations:
          summary: "High memory usage"
          description: "Memory usage is {{ $value | humanizePercentage }}"

      # Business metrics alerts
      - alert: LowOrderRate
        expr: |
          rate(orders_total[1h]) < 0.1
        for: 30m
        labels:
          severity: warning
        annotations:
          summary: "Low order rate detected"
          description: "Order rate is {{ $value }} orders per second"

      - alert: PaymentFailureRate
        expr: |
          (
            rate(payment_failed_total[5m])
            /
            rate(payment_attempts_total[5m])
          ) > 0.1
        for: 5m
        labels:
          severity: critical
        annotations:
          summary: "High payment failure rate"
          description: "Payment failure rate is {{ $value | humanizePercentage }}"

      # Disk space alerts
      - alert: DiskSpaceHigh
        expr: |
          (
            node_filesystem_size_bytes - node_filesystem_free_bytes
          ) / node_filesystem_size_bytes > 0.85
        for: 5m
        labels:
          severity: warning
        annotations:
          summary: "High disk usage"
          description: "Disk usage is {{ $value | humanizePercentage }}"
