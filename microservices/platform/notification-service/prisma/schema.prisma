// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Notification {
  id              String            @id @default(cuid())
  userId          String?
  type            NotificationType
  channel         NotificationChannel
  status          NotificationStatus @default(PENDING)
  priority        NotificationPriority @default(NORMAL)
  subject         String?
  message         String
  recipient       String
  sender          String?
  metadata        Json?
  scheduledAt     DateTime?
  sentAt          DateTime?
  deliveredAt     DateTime?
  readAt          DateTime?
  failureReason   String?
  retryCount      Int               @default(0)
  maxRetries      Int               @default(3)
  templateId      String?
  templateData    Json?
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @updatedAt

  // Relations
  template        NotificationTemplate? @relation(fields: [templateId], references: [id])

  @@index([userId])
  @@index([type])
  @@index([channel])
  @@index([status])
  @@index([priority])
  @@index([scheduledAt])
  @@index([createdAt])
  @@map("notifications")
}

model NotificationTemplate {
  id              String            @id @default(cuid())
  name            String            @unique
  type            NotificationType
  channel         NotificationChannel
  subject         String?
  message         String
  variables       String[]
  isActive        Boolean           @default(true)
  version         Int               @default(1)
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @updatedAt

  // Relations
  notifications   Notification[]

  @@index([name])
  @@index([type])
  @@index([channel])
  @@index([isActive])
  @@map("notification_templates")
}

model NotificationPreference {
  id              String            @id @default(cuid())
  userId          String            @unique
  emailEnabled    Boolean           @default(true)
  smsEnabled      Boolean           @default(true)
  pushEnabled     Boolean           @default(true)
  orderUpdates    Boolean           @default(true)
  promotions      Boolean           @default(true)
  newsletters     Boolean           @default(false)
  securityAlerts  Boolean           @default(true)
  marketing       Boolean           @default(false)
  quietHours      Json?
  timezone        String            @default("UTC")
  language        String            @default("en")
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @updatedAt

  @@index([userId])
  @@map("notification_preferences")
}

model NotificationChannel {
  id              String            @id @default(cuid())
  name            String            @unique
  type            NotificationChannelType
  provider        String
  config          Json
  isActive        Boolean           @default(true)
  priority        Int               @default(0)
  rateLimit       Int?
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @updatedAt

  @@index([name])
  @@index([type])
  @@index([isActive])
  @@map("notification_channels")
}

model NotificationQueue {
  id              String            @id @default(cuid())
  notificationId  String
  status          QueueStatus       @default(PENDING)
  priority        Int               @default(0)
  scheduledAt     DateTime?
  processedAt     DateTime?
  errorMessage    String?
  retryCount      Int               @default(0)
  maxRetries      Int               @default(3)
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @updatedAt

  @@index([notificationId])
  @@index([status])
  @@index([priority])
  @@index([scheduledAt])
  @@map("notification_queue")
}

model NotificationLog {
  id              String            @id @default(cuid())
  notificationId  String?
  userId          String?
  action          String
  status          String
  details         Json?
  ipAddress       String?
  userAgent       String?
  createdAt       DateTime          @default(now())

  @@index([notificationId])
  @@index([userId])
  @@index([action])
  @@index([createdAt])
  @@map("notification_logs")
}

model NotificationAnalytics {
  id              String   @id @default(cuid())
  date            DateTime @db.Date
  type            NotificationType
  channel         NotificationChannel
  totalSent       Int      @default(0)
  totalDelivered  Int      @default(0)
  totalFailed     Int      @default(0)
  totalRead       Int      @default(0)
  deliveryRate    Decimal  @default(0) @db.Decimal(5, 2)
  readRate        Decimal  @default(0) @db.Decimal(5, 2)
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt

  @@unique([date, type, channel])
  @@index([date])
  @@index([type])
  @@index([channel])
  @@map("notification_analytics")
}

// Enums
enum NotificationType {
  ORDER_CONFIRMATION
  ORDER_SHIPPED
  ORDER_DELIVERED
  ORDER_CANCELLED
  PAYMENT_SUCCESS
  PAYMENT_FAILED
  ACCOUNT_VERIFICATION
  PASSWORD_RESET
  SECURITY_ALERT
  PROMOTION
  NEWSLETTER
  WELCOME
  CUSTOM
}

enum NotificationChannel {
  EMAIL
  SMS
  PUSH
  WEBHOOK
  IN_APP
}

enum NotificationStatus {
  PENDING
  QUEUED
  SENDING
  SENT
  DELIVERED
  READ
  FAILED
  CANCELLED
  SCHEDULED
}

enum NotificationPriority {
  LOW
  NORMAL
  HIGH
  URGENT
}

enum NotificationChannelType {
  EMAIL
  SMS
  PUSH
  WEBHOOK
  IN_APP
}

enum QueueStatus {
  PENDING
  PROCESSING
  COMPLETED
  FAILED
  CANCELLED
  SCHEDULED
}