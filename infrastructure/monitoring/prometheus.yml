global:
  scrape_interval: 15s
  evaluation_interval: 15s
  external_labels:
    cluster: ultramarket-production
    environment: production

rule_files:
  - "rules/*.yml"

alerting:
  alertmanagers:
    - static_configs:
        - targets:
          - alertmanager:9093

scrape_configs:
  # Prometheus itself
  - job_name: 'prometheus'
    static_configs:
      - targets: ['localhost:9090']

  # Kubernetes API server
  - job_name: 'kubernetes-apiservers'
    kubernetes_sd_configs:
      - role: endpoints
    scheme: https
    tls_config:
      ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
      insecure_skip_verify: true
    bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
    relabel_configs:
      - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
        action: keep
        regex: default;kubernetes;https

  # Kubernetes nodes
  - job_name: 'kubernetes-nodes'
    kubernetes_sd_configs:
      - role: node
    scheme: https
    tls_config:
      ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
      insecure_skip_verify: true
    bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
    relabel_configs:
      - action: labelmap
        regex: __meta_kubernetes_node_label_(.+)
      - target_label: __address__
        replacement: kubernetes.default.svc:443
      - source_labels: [__meta_kubernetes_node_name]
        regex: (.+)
        target_label: __metrics_path__
        replacement: /api/v1/nodes/${1}/proxy/metrics

  # Kubernetes pods
  - job_name: 'kubernetes-pods'
    kubernetes_sd_configs:
      - role: pod
    relabel_configs:
      - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
        action: keep
        regex: true
      - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
        action: replace
        target_label: __metrics_path__
        regex: (.+)
      - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
        action: replace
        regex: ([^:]+)(?::\d+)?;(\d+)
        replacement: $1:$2
        target_label: __address__
      - action: labelmap
        regex: __meta_kubernetes_pod_label_(.+)
      - source_labels: [__meta_kubernetes_namespace]
        action: replace
        target_label: kubernetes_namespace
      - source_labels: [__meta_kubernetes_pod_name]
        action: replace
        target_label: kubernetes_pod_name

  # User Service
  - job_name: 'user-service'
    kubernetes_sd_configs:
      - role: endpoints
        namespaces:
          names:
            - production
    metrics_path: /metrics
    relabel_configs:
      - source_labels: [__meta_kubernetes_service_label_app]
        regex: user-service
        action: keep
      - source_labels: [__meta_kubernetes_endpoint_address_target_kind, __meta_kubernetes_endpoint_address_target_name]
        regex: Pod;(.*)
        replacement: ${1}
        target_label: pod
      - source_labels: [__meta_kubernetes_namespace]
        target_label: namespace
      - source_labels: [__meta_kubernetes_service_name]
        target_label: service

  # Product Service
  - job_name: 'product-service'
    kubernetes_sd_configs:
      - role: endpoints
        namespaces:
          names:
            - production
    metrics_path: /metrics
    relabel_configs:
      - source_labels: [__meta_kubernetes_service_label_app]
        regex: product-service
        action: keep
      - source_labels: [__meta_kubernetes_endpoint_address_target_kind, __meta_kubernetes_endpoint_address_target_name]
        regex: Pod;(.*)
        replacement: ${1}
        target_label: pod
      - source_labels: [__meta_kubernetes_namespace]
        target_label: namespace
      - source_labels: [__meta_kubernetes_service_name]
        target_label: service

  # Cart Service
  - job_name: 'cart-service'
    kubernetes_sd_configs:
      - role: endpoints
        namespaces:
          names:
            - production
    metrics_path: /metrics
    relabel_configs:
      - source_labels: [__meta_kubernetes_service_label_app]
        regex: cart-service
        action: keep
      - source_labels: [__meta_kubernetes_endpoint_address_target_kind, __meta_kubernetes_endpoint_address_target_name]
        regex: Pod;(.*)
        replacement: ${1}
        target_label: pod
      - source_labels: [__meta_kubernetes_namespace]
        target_label: namespace
      - source_labels: [__meta_kubernetes_service_name]
        target_label: service

  # Order Service
  - job_name: 'order-service'
    kubernetes_sd_configs:
      - role: endpoints
        namespaces:
          names:
            - production
    metrics_path: /metrics
    relabel_configs:
      - source_labels: [__meta_kubernetes_service_label_app]
        regex: order-service
        action: keep
      - source_labels: [__meta_kubernetes_endpoint_address_target_kind, __meta_kubernetes_endpoint_address_target_name]
        regex: Pod;(.*)
        replacement: ${1}
        target_label: pod
      - source_labels: [__meta_kubernetes_namespace]
        target_label: namespace
      - source_labels: [__meta_kubernetes_service_name]
        target_label: service

  # Payment Service
  - job_name: 'payment-service'
    kubernetes_sd_configs:
      - role: endpoints
        namespaces:
          names:
            - production
    metrics_path: /metrics
    relabel_configs:
      - source_labels: [__meta_kubernetes_service_label_app]
        regex: payment-service
        action: keep
      - source_labels: [__meta_kubernetes_endpoint_address_target_kind, __meta_kubernetes_endpoint_address_target_name]
        regex: Pod;(.*)
        replacement: ${1}
        target_label: pod
      - source_labels: [__meta_kubernetes_namespace]
        target_label: namespace
      - source_labels: [__meta_kubernetes_service_name]
        target_label: service

  # PostgreSQL
  - job_name: 'postgres'
    static_configs:
      - targets: ['postgres-service:5432']
    metrics_path: /metrics
    params:
      collect[]:
        - pg_stat_activity
        - pg_stat_bgwriter
        - pg_stat_database
        - pg_stat_replication
        - pg_stat_tables
        - pg_stat_user_indexes
        - pg_stat_user_tables

  # Redis
  - job_name: 'redis'
    static_configs:
      - targets: ['redis-service:6379']
    metrics_path: /metrics

  # MongoDB
  - job_name: 'mongodb'
    static_configs:
      - targets: ['mongodb-service:27017']
    metrics_path: /metrics

  # Elasticsearch
  - job_name: 'elasticsearch'
    static_configs:
      - targets: ['elasticsearch-service:9200']
    metrics_path: /_prometheus/metrics

  # Kafka
  - job_name: 'kafka'
    static_configs:
      - targets: ['kafka-service:9092']
    metrics_path: /metrics

  # Nginx Ingress Controller
  - job_name: 'nginx-ingress'
    kubernetes_sd_configs:
      - role: endpoints
        namespaces:
          names:
            - ingress-nginx
    metrics_path: /metrics
    relabel_configs:
      - source_labels: [__meta_kubernetes_service_label_app]
        regex: nginx-ingress
        action: keep

  # Node Exporter
  - job_name: 'node-exporter'
    kubernetes_sd_configs:
      - role: node
    relabel_configs:
      - action: labelmap
        regex: __meta_kubernetes_node_label_(.+)
      - target_label: __address__
        replacement: kubernetes.default.svc:443
      - source_labels: [__meta_kubernetes_node_name]
        regex: (.+)
        target_label: __metrics_path__
        replacement: /api/v1/nodes/${1}/proxy/metrics/cadvisor

  # Blackbox Exporter (External monitoring)
  - job_name: 'blackbox'
    metrics_path: /probe
    params:
      module: [http_2xx]
    static_configs:
      - targets:
        - https://api.ultramarket.com/health
        - https://ultramarket.com
        - https://admin.ultramarket.com
    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - target_label: __address__
        replacement: blackbox-exporter:9115

  # Grafana
  - job_name: 'grafana'
    static_configs:
      - targets: ['grafana-service:3000']
    metrics_path: /metrics

  # Alertmanager
  - job_name: 'alertmanager'
    static_configs:
      - targets: ['alertmanager-service:9093']
    metrics_path: /metrics 