// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Cart {
  id              String        @id @default(cuid())
  userId          String        @unique
  sessionId       String?       @unique
  status          CartStatus    @default(ACTIVE)
  currency        String        @default("UZS")
  subtotal        Decimal       @default(0) @db.Decimal(10, 2)
  taxAmount       Decimal       @default(0) @db.Decimal(10, 2)
  discountAmount  Decimal       @default(0) @db.Decimal(10, 2)
  shippingAmount  Decimal       @default(0) @db.Decimal(10, 2)
  totalAmount     Decimal       @default(0) @db.Decimal(10, 2)
  appliedCoupons  String[]
  notes           String?
  expiresAt       DateTime?
  createdAt       DateTime      @default(now())
  updatedAt       DateTime      @updatedAt

  // Relations
  items           CartItem[]
  savedForLater   SavedItem[]

  @@index([userId])
  @@index([sessionId])
  @@index([status])
  @@index([expiresAt])
  @@map("carts")
}

model CartItem {
  id              String   @id @default(cuid())
  cartId          String
  productId       String
  variantId       String?
  name            String
  sku             String
  price           Decimal  @db.Decimal(10, 2)
  comparePrice    Decimal? @db.Decimal(10, 2)
  quantity        Int      @default(1)
  maxQuantity     Int?
  weight          Decimal? @db.Decimal(8, 2)
  dimensions      Json?
  image           String?
  attributes      Json?
  isAvailable     Boolean  @default(true)
  availabilityMessage String?
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt

  // Relations
  cart            Cart     @relation(fields: [cartId], references: [id], onDelete: Cascade)

  @@unique([cartId, productId, variantId])
  @@index([cartId])
  @@index([productId])
  @@index([sku])
  @@map("cart_items")
}

model SavedItem {
  id              String   @id @default(cuid())
  cartId          String
  productId       String
  variantId       String?
  name            String
  sku             String
  price           Decimal  @db.Decimal(10, 2)
  comparePrice    Decimal? @db.Decimal(10, 2)
  weight          Decimal? @db.Decimal(8, 2)
  dimensions      Json?
  image           String?
  attributes      Json?
  isAvailable     Boolean  @default(true)
  availabilityMessage String?
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt

  // Relations
  cart            Cart     @relation(fields: [cartId], references: [id], onDelete: Cascade)

  @@unique([cartId, productId, variantId])
  @@index([cartId])
  @@index([productId])
  @@map("saved_items")
}

model Coupon {
  id              String        @id @default(cuid())
  code            String        @unique
  name            String
  description     String?
  type            CouponType
  value           Decimal       @db.Decimal(10, 2)
  minOrderAmount  Decimal?      @db.Decimal(10, 2)
  maxDiscount     Decimal?      @db.Decimal(10, 2)
  usageLimit      Int?
  usedCount       Int           @default(0)
  isActive        Boolean       @default(true)
  isFirstTimeOnly Boolean       @default(false)
  applicableCategories String[]
  excludedCategories String[]
  applicableProducts String[]
  excludedProducts String[]
  startDate       DateTime?
  endDate         DateTime?
  createdAt       DateTime      @default(now())
  updatedAt       DateTime      @updatedAt

  // Relations
  usages          CouponUsage[]

  @@index([code])
  @@index([isActive])
  @@index([startDate, endDate])
  @@map("coupons")
}

model CouponUsage {
  id              String   @id @default(cuid())
  couponId        String
  userId          String
  orderId         String?
  discountAmount  Decimal  @db.Decimal(10, 2)
  usedAt          DateTime @default(now())

  // Relations
  coupon          Coupon   @relation(fields: [couponId], references: [id], onDelete: Cascade)

  @@unique([couponId, userId, orderId])
  @@index([couponId])
  @@index([userId])
  @@index([orderId])
  @@map("coupon_usages")
}

model CartActivity {
  id              String        @id @default(cuid())
  cartId          String
  userId          String?
  sessionId       String?
  action          CartAction
  productId       String?
  variantId       String?
  quantity        Int?
  oldValue        Json?
  newValue        Json?
  ipAddress       String?
  userAgent       String?
  createdAt       DateTime      @default(now())

  @@index([cartId])
  @@index([userId])
  @@index([action])
  @@index([createdAt])
  @@map("cart_activities")
}

// Enums
enum CartStatus {
  ACTIVE
  CONVERTED
  EXPIRED
  ABANDONED
}

enum CouponType {
  PERCENTAGE
  FIXED_AMOUNT
  FREE_SHIPPING
  BUY_X_GET_Y
}

enum CartAction {
  CREATE
  ADD_ITEM
  REMOVE_ITEM
  UPDATE_QUANTITY
  APPLY_COUPON
  REMOVE_COUPON
  CLEAR_CART
  SAVE_FOR_LATER
  MOVE_TO_CART
  CONVERT_TO_ORDER
}