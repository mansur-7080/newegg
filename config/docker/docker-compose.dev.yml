version: '3.8'

services:
  # Database Services
  postgres:
    image: postgres:15-alpine
    container_name: ultramarket_postgres
    environment:
      POSTGRES_DB: ultramarket
      POSTGRES_USER: ultramarket_user
      POSTGRES_PASSWORD: ultramarket_password
    ports:
      - '5432:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-databases.sh:/docker-entrypoint-initdb.d/init-databases.sh
    networks:
      - ultramarket_network
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U ultramarket_user -d ultramarket']
      interval: 30s
      timeout: 10s
      retries: 3

  redis:
    image: redis:7-alpine
    container_name: ultramarket_redis
    ports:
      - '6379:6379'
    volumes:
      - redis_data:/data
    networks:
      - ultramarket_network
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 30s
      timeout: 10s
      retries: 3

  # API Gateway
  api-gateway:
    build:
      context: ../../microservices/core/api-gateway/api-gateway
      dockerfile: Dockerfile.dev
    container_name: ultramarket_api_gateway
    ports:
      - '8000:8000'
    environment:
      - NODE_ENV=development
      - KONG_DATABASE=postgres
      - KONG_PG_HOST=postgres
      - KONG_PG_USER=ultramarket_user
      - KONG_PG_PASSWORD=ultramarket_password
      - KONG_PG_DATABASE=ultramarket
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - ultramarket_network
    volumes:
      - ./kong.yml:/etc/kong/kong.yml:ro

  # Core Services
  auth-service:
    build:
      context: ../../microservices/core/auth-service
      dockerfile: Dockerfile.dev
    container_name: ultramarket_auth_service
    ports:
      - '3001:3001'
    environment:
      - NODE_ENV=development
      - PORT=3001
      - DATABASE_URL=postgresql://ultramarket_user:ultramarket_password@postgres:5432/ultramarket
      - JWT_ACCESS_SECRET=your-super-secret-access-key-here-make-it-long-and-secure
      - JWT_REFRESH_SECRET=your-super-secret-refresh-key-here-make-it-long-and-secure
      - JWT_EMAIL_VERIFICATION_SECRET=your-email-verification-secret-key
      - JWT_PASSWORD_RESET_SECRET=your-password-reset-secret-key
      - REDIS_URL=redis://redis:6379
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - ultramarket_network
    volumes:
      - ../../microservices/core/auth-service:/app
      - /app/node_modules

  user-service:
    build:
      context: ../../microservices/core/user-service/user-service
      dockerfile: Dockerfile.dev
    container_name: ultramarket_user_service
    ports:
      - '3002:3002'
    environment:
      - NODE_ENV=development
      - PORT=3002
      - DATABASE_URL=postgresql://ultramarket_user:ultramarket_password@postgres:5432/ultramarket
      - REDIS_URL=redis://redis:6379
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - ultramarket_network
    volumes:
      - ../../microservices/core/user-service/user-service:/app
      - /app/node_modules

  # Business Services
  product-service:
    build:
      context: ../../microservices/business/product-service
      dockerfile: Dockerfile.dev
    container_name: ultramarket_product_service
    ports:
      - '3003:3003'
    environment:
      - NODE_ENV=development
      - PORT=3003
      - DATABASE_URL=postgresql://ultramarket_user:ultramarket_password@postgres:5432/ultramarket
      - REDIS_URL=redis://redis:6379
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - ultramarket_network
    volumes:
      - ../../microservices/business/product-service:/app
      - /app/node_modules

  order-service:
    build:
      context: ../../microservices/business/order-service/order-service
      dockerfile: Dockerfile.dev
    container_name: ultramarket_order_service
    ports:
      - '3004:3004'
    environment:
      - NODE_ENV=development
      - PORT=3004
      - DATABASE_URL=postgresql://ultramarket_user:ultramarket_password@postgres:5432/ultramarket
      - REDIS_URL=redis://redis:6379
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - ultramarket_network
    volumes:
      - ../../microservices/business/order-service/order-service:/app
      - /app/node_modules

  payment-service:
    build:
      context: ../../microservices/business/payment-service/payment-service
      dockerfile: Dockerfile.dev
    container_name: ultramarket_payment_service
    ports:
      - '3005:3005'
    environment:
      - NODE_ENV=development
      - PORT=3005
      - DATABASE_URL=postgresql://ultramarket_user:ultramarket_password@postgres:5432/ultramarket
      - REDIS_URL=redis://redis:6379
      - STRIPE_SECRET_KEY=sk_test_your_stripe_secret_key
      - STRIPE_WEBHOOK_SECRET=whsec_your_webhook_secret
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - ultramarket_network
    volumes:
      - ../../microservices/business/payment-service/payment-service:/app
      - /app/node_modules

  cart-service:
    build:
      context: ../../microservices/business/cart-service/cart-service
      dockerfile: Dockerfile.dev
    container_name: ultramarket_cart_service
    ports:
      - '3006:3006'
    environment:
      - NODE_ENV=development
      - PORT=3006
      - DATABASE_URL=postgresql://ultramarket_user:ultramarket_password@postgres:5432/ultramarket
      - REDIS_URL=redis://redis:6379
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - ultramarket_network
    volumes:
      - ../../microservices/business/cart-service/cart-service:/app
      - /app/node_modules

  # Platform Services
  search-service:
    build:
      context: ../../microservices/platform/search-service/search-service
      dockerfile: Dockerfile.dev
    container_name: ultramarket_search_service
    ports:
      - '3007:3007'
    environment:
      - NODE_ENV=development
      - PORT=3007
      - DATABASE_URL=postgresql://ultramarket_user:ultramarket_password@postgres:5432/ultramarket
      - REDIS_URL=redis://redis:6379
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - ultramarket_network
    volumes:
      - ../../microservices/platform/search-service/search-service:/app
      - /app/node_modules

  notification-service:
    build:
      context: ../../microservices/platform/notification-service/notification-service
      dockerfile: Dockerfile.dev
    container_name: ultramarket_notification_service
    ports:
      - '3008:3008'
    environment:
      - NODE_ENV=development
      - PORT=3008
      - DATABASE_URL=postgresql://ultramarket_user:ultramarket_password@postgres:5432/ultramarket
      - REDIS_URL=redis://redis:6379
      - SMTP_HOST=smtp.gmail.com
      - SMTP_PORT=587
      - SMTP_USER=your-email@gmail.com
      - SMTP_PASS=your-app-password
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - ultramarket_network
    volumes:
      - ../../microservices/platform/notification-service/notification-service:/app
      - /app/node_modules

  # Analytics Services
  analytics-service:
    build:
      context: ../../microservices/analytics/analytics-service
      dockerfile: Dockerfile.dev
    container_name: ultramarket_analytics_service
    ports:
      - '3009:3009'
    environment:
      - NODE_ENV=development
      - PORT=3009
      - DATABASE_URL=postgresql://ultramarket_user:ultramarket_password@postgres:5432/ultramarket
      - REDIS_URL=redis://redis:6379
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - ultramarket_network
    volumes:
      - ../../microservices/analytics/analytics-service:/app
      - /app/node_modules

  # Monitoring Services
  prometheus:
    image: prom/prometheus:latest
    container_name: ultramarket_prometheus
    ports:
      - '9090:9090'
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - ultramarket_network

  grafana:
    image: grafana/grafana:latest
    container_name: ultramarket_grafana
    ports:
      - '3000:3000'
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    networks:
      - ultramarket_network
    depends_on:
      - prometheus

  # Development Tools
  adminer:
    image: adminer:latest
    container_name: ultramarket_adminer
    ports:
      - '8080:8080'
    networks:
      - ultramarket_network

  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: ultramarket_redis_commander
    ports:
      - '8081:8081'
    environment:
      - REDIS_HOSTS=local:redis:6379
    networks:
      - ultramarket_network
    depends_on:
      - redis

volumes:
  postgres_data:
  redis_data:
  prometheus_data:
  grafana_data:

networks:
  ultramarket_network:
    driver: bridge
