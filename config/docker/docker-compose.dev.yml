version: '3.8'

services:
  # Database Services
  postgres:
    image: postgres:15-alpine
    container_name: ultramarket_postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-ultramarket}
      POSTGRES_USER: ${POSTGRES_USER:-ultramarket_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-ultramarket_secure_password_2024}
    ports:
      - '5432:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-databases.sh:/docker-entrypoint-initdb.d/init-databases.sh
    networks:
      - ultramarket_network
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U ultramarket_user -d ultramarket']
      interval: 30s
      timeout: 10s
      retries: 3

  redis:
    image: redis:7-alpine
    container_name: ultramarket_redis
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD:-ultramarket_redis_secure_2024}
    ports:
      - '6379:6379'
    volumes:
      - redis_data:/data
    networks:
      - ultramarket_network
    healthcheck:
      test: ['CMD', 'redis-cli', '-a', '${REDIS_PASSWORD:-ultramarket_redis_secure_2024}', 'ping']
      interval: 30s
      timeout: 10s
      retries: 3

  # API Gateway
  api-gateway:
    build:
      context: ../../microservices/core/api-gateway/api-gateway
      dockerfile: Dockerfile.dev
    container_name: ultramarket_api_gateway
    ports:
      - '8000:8000'
    environment:
      - NODE_ENV=development
      - KONG_DATABASE=postgres
      - KONG_PG_HOST=postgres
      - KONG_PG_USER=${POSTGRES_USER:-ultramarket_user}
      - KONG_PG_PASSWORD=${POSTGRES_PASSWORD:-ultramarket_secure_password_2024}
      - KONG_PG_DATABASE=${POSTGRES_DB:-ultramarket}
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - ultramarket_network
    volumes:
      - ./kong.yml:/etc/kong/kong.yml:ro

  # Core Services
  auth-service:
    build:
      context: ../../microservices/core/auth-service
      dockerfile: Dockerfile.dev
    container_name: ultramarket_auth_service
    ports:
      - '3001:3001'
    environment:
      - NODE_ENV=development
      - PORT=3001
      - DATABASE_URL=postgresql://${POSTGRES_USER:-ultramarket_user}:${POSTGRES_PASSWORD:-ultramarket_secure_password_2024}@postgres:5432/${POSTGRES_DB:-ultramarket}
      - JWT_ACCESS_SECRET=${JWT_ACCESS_SECRET:-ultramarket_jwt_access_secret_2024_development_only}
      - JWT_REFRESH_SECRET=${JWT_REFRESH_SECRET:-ultramarket_jwt_refresh_secret_2024_development_only}
      - JWT_EMAIL_VERIFICATION_SECRET=${JWT_EMAIL_VERIFICATION_SECRET:-ultramarket_email_verification_secret_2024}
      - JWT_PASSWORD_RESET_SECRET=${JWT_PASSWORD_RESET_SECRET:-ultramarket_password_reset_secret_2024}
      - REDIS_URL=redis://:${REDIS_PASSWORD:-ultramarket_redis_secure_2024}@redis:6379
      - SMTP_HOST=${SMTP_HOST:-}
      - SMTP_PORT=${SMTP_PORT:-587}
      - SMTP_USER=${SMTP_USER:-}
      - SMTP_PASS=${SMTP_PASS:-}
      - SMTP_FROM=${SMTP_FROM:-noreply@ultramarket.uz}
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - ultramarket_network
    volumes:
      - ../../microservices/core/auth-service:/app
      - /app/node_modules

  user-service:
    build:
      context: ../../microservices/core/user-service/user-service
      dockerfile: Dockerfile.dev
    container_name: ultramarket_user_service
    ports:
      - '3002:3002'
    environment:
      - NODE_ENV=development
      - PORT=3002
      - DATABASE_URL=postgresql://${POSTGRES_USER:-ultramarket_user}:${POSTGRES_PASSWORD:-ultramarket_secure_password_2024}@postgres:5432/${POSTGRES_DB:-ultramarket}
      - REDIS_URL=redis://:${REDIS_PASSWORD:-ultramarket_redis_secure_2024}@redis:6379
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - ultramarket_network
    volumes:
      - ../../microservices/core/user-service/user-service:/app
      - /app/node_modules

  # Business Services
  product-service:
    build:
      context: ../../microservices/business/product-service/product-service
      dockerfile: Dockerfile.dev
    container_name: ultramarket_product_service
    ports:
      - '3003:3003'
    environment:
      - NODE_ENV=development
      - PORT=3003
      - DATABASE_URL=postgresql://${POSTGRES_USER:-ultramarket_user}:${POSTGRES_PASSWORD:-ultramarket_secure_password_2024}@postgres:5432/${POSTGRES_DB:-ultramarket}
      - REDIS_URL=redis://:${REDIS_PASSWORD:-ultramarket_redis_secure_2024}@redis:6379
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - ultramarket_network
    volumes:
      - ../../microservices/business/product-service/product-service:/app
      - /app/node_modules

  order-service:
    build:
      context: ../../microservices/business/order-service/order-service
      dockerfile: Dockerfile.dev
    container_name: ultramarket_order_service
    ports:
      - '3004:3004'
    environment:
      - NODE_ENV=development
      - PORT=3004
      - DATABASE_URL=postgresql://${POSTGRES_USER:-ultramarket_user}:${POSTGRES_PASSWORD:-ultramarket_secure_password_2024}@postgres:5432/${POSTGRES_DB:-ultramarket}
      - REDIS_URL=redis://:${REDIS_PASSWORD:-ultramarket_redis_secure_2024}@redis:6379
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - ultramarket_network
    volumes:
      - ../../microservices/business/order-service/order-service:/app
      - /app/node_modules

  payment-service:
    build:
      context: ../../microservices/business/payment-service/payment-service
      dockerfile: Dockerfile.dev
    container_name: ultramarket_payment_service
    ports:
      - '3005:3005'
    environment:
      - NODE_ENV=development
      - PORT=3005
      - DATABASE_URL=postgresql://${POSTGRES_USER:-ultramarket_user}:${POSTGRES_PASSWORD:-ultramarket_secure_password_2024}@postgres:5432/${POSTGRES_DB:-ultramarket}
      - REDIS_URL=redis://:${REDIS_PASSWORD:-ultramarket_redis_secure_2024}@redis:6379
      - STRIPE_SECRET_KEY=${STRIPE_SECRET_KEY:-sk_test_your_stripe_secret_key}
      - STRIPE_WEBHOOK_SECRET=${STRIPE_WEBHOOK_SECRET:-whsec_your_webhook_secret}
      - CLICK_SECRET_KEY=${CLICK_SECRET_KEY:-}
      - PAYME_SECRET_KEY=${PAYME_SECRET_KEY:-}
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - ultramarket_network
    volumes:
      - ../../microservices/business/payment-service/payment-service:/app
      - /app/node_modules

  cart-service:
    build:
      context: ../../microservices/business/cart-service/cart-service
      dockerfile: Dockerfile.dev
    container_name: ultramarket_cart_service
    ports:
      - '3006:3006'
    environment:
      - NODE_ENV=development
      - PORT=3006
      - DATABASE_URL=postgresql://${POSTGRES_USER:-ultramarket_user}:${POSTGRES_PASSWORD:-ultramarket_secure_password_2024}@postgres:5432/${POSTGRES_DB:-ultramarket}
      - REDIS_URL=redis://:${REDIS_PASSWORD:-ultramarket_redis_secure_2024}@redis:6379
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - ultramarket_network
    volumes:
      - ../../microservices/business/cart-service/cart-service:/app
      - /app/node_modules

  # Platform Services
  notification-service:
    build:
      context: ../../microservices/platform/notification-service/notification-service
      dockerfile: Dockerfile.dev
    container_name: ultramarket_notification_service
    ports:
      - '3007:3007'
    environment:
      - NODE_ENV=development
      - PORT=3007
      - DATABASE_URL=postgresql://${POSTGRES_USER:-ultramarket_user}:${POSTGRES_PASSWORD:-ultramarket_secure_password_2024}@postgres:5432/${POSTGRES_DB:-ultramarket}
      - REDIS_URL=redis://:${REDIS_PASSWORD:-ultramarket_redis_secure_2024}@redis:6379
      - SMTP_HOST=${SMTP_HOST:-}
      - SMTP_PORT=${SMTP_PORT:-587}
      - SMTP_USER=${SMTP_USER:-}
      - SMTP_PASS=${SMTP_PASS:-}
      - FIREBASE_SERVER_KEY=${FIREBASE_SERVER_KEY:-}
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - ultramarket_network
    volumes:
      - ../../microservices/platform/notification-service/notification-service:/app
      - /app/node_modules

  search-service:
    build:
      context: ../../microservices/platform/search-service/search-service
      dockerfile: Dockerfile.dev
    container_name: ultramarket_search_service
    ports:
      - '3008:3008'
    environment:
      - NODE_ENV=development
      - PORT=3008
      - ELASTICSEARCH_URL=http://elasticsearch:9200
      - REDIS_URL=redis://:${REDIS_PASSWORD:-ultramarket_redis_secure_2024}@redis:6379
    depends_on:
      elasticsearch:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - ultramarket_network
    volumes:
      - ../../microservices/platform/search-service/search-service:/app
      - /app/node_modules

  # Monitoring Services
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.0
    container_name: ultramarket_elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ports:
      - '9200:9200'
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    networks:
      - ultramarket_network
    healthcheck:
      test: ['CMD-SHELL', 'curl -f http://localhost:9200/_cluster/health || exit 1']
      interval: 30s
      timeout: 10s
      retries: 5

  kibana:
    image: docker.elastic.co/kibana/kibana:8.11.0
    container_name: ultramarket_kibana
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    ports:
      - '5601:5601'
    depends_on:
      elasticsearch:
        condition: service_healthy
    networks:
      - ultramarket_network

  # Frontend Applications
  web-app:
    build:
      context: ../../frontend/web-app
      dockerfile: Dockerfile.dev
    container_name: ultramarket_web_app
    ports:
      - '3000:3000'
    environment:
      - REACT_APP_API_URL=http://localhost:8000
      - REACT_APP_ENVIRONMENT=development
    networks:
      - ultramarket_network
    volumes:
      - ../../frontend/web-app:/app
      - /app/node_modules

  admin-panel:
    build:
      context: ../../frontend/admin-panel
      dockerfile: Dockerfile.dev
    container_name: ultramarket_admin_panel
    ports:
      - '3009:3000'
    environment:
      - REACT_APP_API_URL=http://localhost:8000
      - REACT_APP_ENVIRONMENT=development
    networks:
      - ultramarket_network
    volumes:
      - ../../frontend/admin-panel:/app
      - /app/node_modules

networks:
  ultramarket_network:
    driver: bridge

volumes:
  postgres_data:
  redis_data:
  elasticsearch_data:
