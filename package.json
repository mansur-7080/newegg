{
  "name": "ultramarket-enterprise",
  "version": "2.0.0",
  "description": "Enterprise-grade E-commerce Platform with Microservices Architecture",
  "private": true,
  "author": "UltraMarket Development Team",
  "license": "MIT",
  "keywords": [
    "e-commerce",
    "microservices",
    "enterprise",
    "marketplace",
    "typescript",
    "react",
    "node.js",
    "kubernetes",
    "docker"
  ],
  "engines": {
    "node": ">=18.0.0",
    "npm": ">=8.0.0",
    "yarn": ">=1.22.0"
  },
  "workspaces": [
    "frontend/*",
    "microservices/*/*",
    "libs/*"
  ],
  "scripts": {
    "dev": "concurrently \"npm run dev:api-gateway\" \"npm run dev:web-app\" \"npm run dev:admin-panel\"",
    "dev:api-gateway": "cd microservices/core/api-gateway && npm run dev",
    "dev:web-app": "cd frontend/web-app && npm run dev",
    "dev:admin-panel": "cd frontend/admin-panel && npm run dev",
    "dev:services": "concurrently \"npm run dev:auth\" \"npm run dev:user\" \"npm run dev:product\" \"npm run dev:order\" \"npm run dev:payment\" \"npm run dev:cart\"",
    "dev:auth": "cd microservices/core/auth-service && npm run dev",
    "dev:user": "cd microservices/core/user-service && npm run dev",
    "dev:product": "cd microservices/business/product-service && npm run dev",
    "dev:order": "cd microservices/business/order-service && npm run dev",
    "dev:payment": "cd microservices/business/payment-service && npm run dev",
    "dev:cart": "cd microservices/business/cart-service && npm run dev",
    "build": "npm run build:libs && npm run build:frontend && npm run build:services",
    "build:libs": "cd libs/shared && npm run build",
    "build:frontend": "concurrently \"npm run build:web-app\" \"npm run build:admin-panel\"",
    "build:web-app": "cd frontend/web-app && npm run build",
    "build:admin-panel": "cd frontend/admin-panel && npm run build",
    "build:services": "concurrently \"npm run build:auth\" \"npm run build:user\" \"npm run build:product\" \"npm run build:order\" \"npm run build:payment\" \"npm run build:cart\"",
    "build:auth": "cd microservices/core/auth-service && npm run build",
    "build:user": "cd microservices/core/user-service && npm run build",
    "build:product": "cd microservices/business/product-service && npm run build",
    "build:order": "cd microservices/business/order-service && npm run build",
    "build:payment": "cd microservices/business/payment-service && npm run build",
    "build:cart": "cd microservices/business/cart-service && npm run build",
    "test": "npm run test:unit && npm run test:integration && npm run test:e2e",
    "test:unit": "jest --config jest.config.js",
    "test:integration": "cd tests/integration && npm test",
    "test:e2e": "cd tests/e2e && npm run test:headless",
    "test:watch": "jest --watch",
    "test:coverage": "jest --coverage",
    "lint": "npm run lint:frontend && npm run lint:backend && npm run lint:shared",
    "lint:frontend": "concurrently \"cd frontend/web-app && npm run lint\" \"cd frontend/admin-panel && npm run lint\"",
    "lint:backend": "eslint \"microservices/**/*.{ts,js}\" --fix",
    "lint:shared": "eslint \"libs/**/*.{ts,js}\" --fix",
    "lint:fix": "npm run lint:frontend:fix && npm run lint:backend:fix && npm run lint:shared:fix",
    "lint:frontend:fix": "concurrently \"cd frontend/web-app && npm run lint:fix\" \"cd frontend/admin-panel && npm run lint:fix\"",
    "lint:backend:fix": "eslint \"microservices/**/*.{ts,js}\" --fix",
    "lint:shared:fix": "eslint \"libs/**/*.{ts,js}\" --fix",
    "type-check": "npm run type-check:frontend && npm run type-check:backend",
    "type-check:frontend": "concurrently \"cd frontend/web-app && npm run typecheck\" \"cd frontend/admin-panel && npm run typecheck\"",
    "type-check:backend": "tsc --noEmit --project tsconfig.json",
    "format": "prettier --write \"**/*.{ts,tsx,js,jsx,json,css,md}\"",
    "format:check": "prettier --check \"**/*.{ts,tsx,js,jsx,json,css,md}\"",
    "docker:build": "docker-compose -f docker-compose.yml build",
    "docker:dev": "docker-compose -f docker-compose.dev.yml up -d",
    "docker:prod": "docker-compose -f docker-compose.yml up -d",
    "docker:down": "docker-compose down",
    "docker:logs": "docker-compose logs -f",
    "docker:clean": "docker system prune -af && docker volume prune -f",
    "k8s:deploy": "kubectl apply -f infrastructure/kubernetes/",
    "k8s:delete": "kubectl delete -f infrastructure/kubernetes/",
    "k8s:logs": "kubectl logs -f deployment/api-gateway",
    "db:migrate": "cd microservices/core/user-service && npx prisma migrate dev",
    "db:seed": "cd microservices/core/user-service && npx prisma db seed",
    "db:reset": "cd microservices/core/user-service && npx prisma migrate reset",
    "db:studio": "cd microservices/core/user-service && npx prisma studio",
    "security:audit": "npm audit --audit-level=moderate",
    "security:fix": "npm audit fix",
    "security:scan": "node security-audit/penetration-testing.js",
    "deps:check": "npm-check-updates -u",
    "deps:install": "npm install && npm run install:all",
    "deps:update": "npm update && npm run update:all",
    "install:all": "concurrently \"npm run install:frontend\" \"npm run install:backend\" \"npm run install:libs\"",
    "install:frontend": "concurrently \"cd frontend/web-app && npm install\" \"cd frontend/admin-panel && npm install\"",
    "install:backend": "concurrently \"cd microservices/core/auth-service && npm install\" \"cd microservices/core/user-service && npm install\" \"cd microservices/business/product-service && npm install\" \"cd microservices/business/order-service && npm install\" \"cd microservices/business/payment-service && npm install\" \"cd microservices/business/cart-service && npm install\"",
    "install:libs": "cd libs/shared && npm install",
    "update:all": "concurrently \"npm run update:frontend\" \"npm run update:backend\" \"npm run update:libs\"",
    "update:frontend": "concurrently \"cd frontend/web-app && npm update\" \"cd frontend/admin-panel && npm update\"",
    "update:backend": "concurrently \"cd microservices/core/auth-service && npm update\" \"cd microservices/core/user-service && npm update\" \"cd microservices/business/product-service && npm update\" \"cd microservices/business/order-service && npm update\" \"cd microservices/business/payment-service && npm update\" \"cd microservices/business/cart-service && npm update\"",
    "update:libs": "cd libs/shared && npm update",
    "clean": "npm run clean:dist && npm run clean:node_modules && npm run clean:logs",
    "clean:dist": "rimraf **/dist **/build **/.next",
    "clean:node_modules": "rimraf **/node_modules",
    "clean:logs": "rimraf **/*.log",
    "health:check": "node scripts/health-check.js",
    "monitoring:start": "cd infrastructure/monitoring && docker-compose up -d",
    "monitoring:stop": "cd infrastructure/monitoring && docker-compose down",
    "backup:create": "node scripts/backup.js",
    "backup:restore": "node scripts/restore.js",
    "precommit": "npm run lint:fix && npm run type-check && npm run test:unit",
    "prepush": "npm run build && npm run test",
    "postinstall": "husky install"
  },
  "devDependencies": {
    "@types/node": "^20.10.5",
    "@typescript-eslint/eslint-plugin": "^6.21.0",
    "@typescript-eslint/parser": "^6.21.0",
    "concurrently": "^8.2.2",
    "eslint": "^8.56.0",
    "eslint-config-prettier": "^9.1.0",
    "eslint-plugin-import": "^2.29.1",
    "eslint-plugin-node": "^11.1.0",
    "eslint-plugin-prettier": "^5.1.2",
    "eslint-plugin-security": "^1.7.1",
    "husky": "^8.0.3",
    "jest": "^29.7.0",
    "lint-staged": "^15.2.0",
    "npm-check-updates": "^16.14.12",
    "prettier": "^3.1.1",
    "rimraf": "^5.0.5",
    "typescript": "^5.3.3"
  },
  "dependencies": {
    "dotenv": "^16.3.1",
    "winston": "^3.11.0"
  },
  "lint-staged": {
    "*.{ts,tsx,js,jsx}": [
      "eslint --fix",
      "prettier --write"
    ],
    "*.{json,css,md}": [
      "prettier --write"
    ]
  },
  "husky": {
    "hooks": {
      "pre-commit": "lint-staged",
      "pre-push": "npm run test:unit"
    }
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/ultramarket/ultramarket-enterprise.git"
  },
  "bugs": {
    "url": "https://github.com/ultramarket/ultramarket-enterprise/issues"
  },
  "homepage": "https://github.com/ultramarket/ultramarket-enterprise#readme"
}
