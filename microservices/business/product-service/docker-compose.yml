version: '3.8'

services:
  # Product Service
  product-service:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: ultramarket-product-service-dev
    ports:
      - "3003:3003"
    environment:
      - NODE_ENV=development
      - PORT=3003
      - MONGODB_URI=mongodb://mongodb:27017/ultramarket-products
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - JWT_SECRET=dev-jwt-secret-change-in-production
      - CORS_ORIGIN=http://localhost:3000,http://localhost:3001
    volumes:
      - .:/app/product-service
      - /app/product-service/node_modules
      - product-uploads:/app/product-service/uploads
      - product-logs:/app/product-service/logs
    depends_on:
      - mongodb
      - redis
    networks:
      - ultramarket-network
    restart: unless-stopped
    command: npm run dev

  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: ultramarket-mongodb-products
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=password123
      - MONGO_INITDB_DATABASE=ultramarket-products
    volumes:
      - mongodb-data:/data/db
      - ./scripts/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    networks:
      - ultramarket-network
    restart: unless-stopped

  # Redis Cache
  redis:
    image: redis:7.2-alpine
    container_name: ultramarket-redis-products
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes --requirepass redispassword
    volumes:
      - redis-data:/data
    networks:
      - ultramarket-network
    restart: unless-stopped

  # MongoDB Express (Database Admin UI)
  mongo-express:
    image: mongo-express:1.0.0
    container_name: ultramarket-mongo-express
    ports:
      - "8081:8081"
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME=admin
      - ME_CONFIG_MONGODB_ADMINPASSWORD=password123
      - ME_CONFIG_MONGODB_SERVER=mongodb
      - ME_CONFIG_MONGODB_PORT=27017
      - ME_CONFIG_BASICAUTH_USERNAME=admin
      - ME_CONFIG_BASICAUTH_PASSWORD=admin123
    depends_on:
      - mongodb
    networks:
      - ultramarket-network
    restart: unless-stopped

  # Redis Commander (Redis Admin UI)
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: ultramarket-redis-commander
    ports:
      - "8082:8081"
    environment:
      - REDIS_HOSTS=local:redis:6379:0:redispassword
      - HTTP_USER=admin
      - HTTP_PASSWORD=admin123
    depends_on:
      - redis
    networks:
      - ultramarket-network
    restart: unless-stopped

volumes:
  mongodb-data:
    driver: local
  redis-data:
    driver: local
  product-uploads:
    driver: local
  product-logs:
    driver: local

networks:
  ultramarket-network:
    driver: bridge
    name: ultramarket-network